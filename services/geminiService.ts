
import { GoogleGenAI, Modality } from "@google/genai";

const API_KEY = process.env.API_KEY;

if (!API_KEY) {
  throw new Error("API_KEY environment variable is not set.");
}

const ai = new GoogleGenAI({ apiKey: API_KEY });

/**
 * Generates an artistic QR code using the Gemini model.
 * @param base64QrImage The base64 encoded string of the standard QR code image.
 * @param prompt The user's text prompt for the artistic style.
 * @returns A promise that resolves to the base64 encoded string of the generated art QR code.
 */
export async function generateArtQrCode(base64QrImage: string, prompt: string): Promise<string> {
  try {
    const response = await ai.models.generateContent({
      model: 'gemini-2.5-flash-image',
      contents: {
        parts: [
          {
            inlineData: {
              data: base64QrImage,
              mimeType: 'image/png',
            },
          },
          {
            text: `Please integrate this QR code into an artistic and creative image based on the following theme: "${prompt}".
            
            IMPORTANT RULES:
            - The QR code must remain fully scannable and functional. Do not alter the core data patterns or finder patterns significantly.
            - The final output must be a single image containing the stylized QR code.
            - The artistic elements should surround or be integrated into the QR code's background or non-essential areas.
            - Maintain high contrast for the QR code's data modules.
            `,
          },
        ],
      },
      config: {
        responseModalities: [Modality.IMAGE],
      },
    });

    for (const part of response.candidates[0].content.parts) {
      if (part.inlineData) {
        return part.inlineData.data;
      }
    }

    throw new Error("No image was generated by the AI model.");

  } catch (error) {
    console.error("Error calling Gemini API:", error);
    if (error instanceof Error && error.message.includes('API key not valid')) {
       throw new Error("The configured API key is invalid. Please check your credentials.");
    }
    throw new Error("Failed to generate AI QR Art. The model might be busy or the prompt could be inappropriate.");
  }
}
